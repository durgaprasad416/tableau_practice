<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook original-version='18.1' source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Global Superstore)' inline='true' name='excel-direct.42079.604098703705' version='18.1'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Orders (Global Superstore)' name='excel-direct.42079.604098703705leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sss/Downloads/projects/tb_projects/TB!5.twb Files/Data/Data/Global Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.42079.604098703705leaf' name='Orders$' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:W51291:no:A1:W51291:0' header='yes' outcome='2'>
            <column datatype='string' name='Category' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='Customer Name' ordinal='3' />
            <column datatype='string' name='Market' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='date' name='Order Date' ordinal='6' />
            <column datatype='string' name='Order ID' ordinal='7' />
            <column datatype='string' name='Order Priority' ordinal='8' />
            <column datatype='string' name='Product ID' ordinal='9' />
            <column datatype='string' name='Product Name' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
            <column datatype='integer' name='Row ID' ordinal='12' />
            <column datatype='string' name='Segment' ordinal='13' />
            <column datatype='date' name='Ship Date' ordinal='14' />
            <column datatype='string' name='Ship Mode' ordinal='15' />
            <column datatype='string' name='State' ordinal='16' />
            <column datatype='string' name='Sub-Category' ordinal='17' />
            <column datatype='real' name='Discount' ordinal='18' />
            <column datatype='real' name='Profit' ordinal='19' />
            <column datatype='integer' name='Quantity' ordinal='20' />
            <column datatype='real' name='Sales' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.42079.604098703705leaf' name='Orders$' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:W51291:no:A1:W51291:0' header='yes' outcome='2'>
            <column datatype='string' name='Category' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='Customer Name' ordinal='3' />
            <column datatype='string' name='Market' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='date' name='Order Date' ordinal='6' />
            <column datatype='string' name='Order ID' ordinal='7' />
            <column datatype='string' name='Order Priority' ordinal='8' />
            <column datatype='string' name='Product ID' ordinal='9' />
            <column datatype='string' name='Product Name' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
            <column datatype='integer' name='Row ID' ordinal='12' />
            <column datatype='string' name='Segment' ordinal='13' />
            <column datatype='date' name='Ship Date' ordinal='14' />
            <column datatype='string' name='Ship Mode' ordinal='15' />
            <column datatype='string' name='State' ordinal='16' />
            <column datatype='string' name='Sub-Category' ordinal='17' />
            <column datatype='real' name='Discount' ordinal='18' />
            <column datatype='real' name='Profit' ordinal='19' />
            <column datatype='integer' name='Quantity' ordinal='20' />
            <column datatype='real' name='Sales' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders$]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:W51291:no:A1:W51291:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders$]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Office Products' datatype='string' name='[Sub-Category (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Desk Supplies&quot;'>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Labels&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Office Machines&quot;'>
            <value>&quot;Appliances&quot;</value>
            <value>&quot;Copiers&quot;</value>
            <value>&quot;Machines&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Desk Supplies' datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='false' value='&quot;Desk Supplies&quot;'>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Labels&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Category,Order ID)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:ProductCategory:nk]' />
          <groupfilter function='level-members' level='[none:OrderID:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Category,Product Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:ProductCategory:nk]' />
          <groupfilter function='level-members' level='[none:ProductName:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Customer ID,Segment)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Customer ID:nk]' />
          <groupfilter function='level-members' level='[none:Segment:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' type='shape' />
          <encoding attr='color' field='[Sub-Category (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Desk Supplies&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Machines&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.42079.604098703705leaf' name='Orders$' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:W51291:no:A1:W51291:0' header='yes' outcome='2'>
                  <column datatype='string' name='Category' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='Customer Name' ordinal='3' />
                  <column datatype='string' name='Market' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='date' name='Order Date' ordinal='6' />
                  <column datatype='string' name='Order ID' ordinal='7' />
                  <column datatype='string' name='Order Priority' ordinal='8' />
                  <column datatype='string' name='Product ID' ordinal='9' />
                  <column datatype='string' name='Product Name' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                  <column datatype='integer' name='Row ID' ordinal='12' />
                  <column datatype='string' name='Segment' ordinal='13' />
                  <column datatype='date' name='Ship Date' ordinal='14' />
                  <column datatype='string' name='Ship Mode' ordinal='15' />
                  <column datatype='string' name='State' ordinal='16' />
                  <column datatype='string' name='Sub-Category' ordinal='17' />
                  <column datatype='real' name='Discount' ordinal='18' />
                  <column datatype='real' name='Profit' ordinal='19' />
                  <column datatype='integer' name='Quantity' ordinal='20' />
                  <column datatype='real' name='Sales' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Filter sales and market'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='excel-direct.42079.604098703705' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42079.604098703705'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42079.604098703705].[none:Market:nk]'>
            <groupfilter function='member' level='[none:Market:nk]' member='&quot;EMEA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[excel-direct.42079.604098703705].[sum:Sales:qk]' included-values='in-range'>
            <min>300000.0</min>
            <max>800000.0</max>
          </filter>
          <slices>
            <column>[excel-direct.42079.604098703705].[none:Market:nk]</column>
            <column>[excel-direct.42079.604098703705].[sum:Sales:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[excel-direct.42079.604098703705].[none:Market:nk]' value='Select a Market'>
              <formatted-text>
                <run>Select a Market</run>
              </formatted-text>
            </format>
            <format attr='title' field='[excel-direct.42079.604098703705].[sum:Sales:qk]' value='Adjust view by sales '>
              <formatted-text>
                <run>Adjust view by sales </run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[excel-direct.42079.604098703705].[sum:Sales:qk]</rows>
        <cols>([excel-direct.42079.604098703705].[none:Category:nk] / [excel-direct.42079.604098703705].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{57927F0D-620C-4261-9940-A2ED80723C28}' />
    </worksheet>
    <worksheet name='Group_!'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='excel-direct.42079.604098703705' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42079.604098703705'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Office Products' datatype='string' name='[Sub-Category (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Desk Supplies&quot;'>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Labels&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Office Machines&quot;'>
                  <value>&quot;Appliances&quot;</value>
                  <value>&quot;Copiers&quot;</value>
                  <value>&quot;Machines&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[excel-direct.42079.604098703705].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42079.604098703705].[Sub-Category (group) 1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42079.604098703705].[none:Sub-Category:nk]</rows>
        <cols>[excel-direct.42079.604098703705].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{F383CA98-2613-44CF-A4DC-76A17C7C0A46}' />
    </worksheet>
    <worksheet name='Grouping  as Desk Supplies'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='excel-direct.42079.604098703705' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42079.604098703705'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Desk Supplies' datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='false' value='&quot;Desk Supplies&quot;'>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Labels&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[excel-direct.42079.604098703705].[Sub-Category (group)]</rows>
        <cols>[excel-direct.42079.604098703705].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{DFD2CDEE-9450-448D-96CF-3E85004BB080}' />
    </worksheet>
    <worksheet name='Sort by profitability'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='excel-direct.42079.604098703705' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42079.604098703705'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[excel-direct.42079.604098703705].[none:Sub-Category:nk]' direction='DESC' using='[excel-direct.42079.604098703705].[sum:Profit:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42079.604098703705].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([excel-direct.42079.604098703705].[none:Category:nk] / [excel-direct.42079.604098703705].[none:Sub-Category:nk])</rows>
        <cols>[excel-direct.42079.604098703705].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{EB8A72E9-5DD2-460C-A518-72E31649EB04}' />
    </worksheet>
    <worksheet name='Sort_1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='excel-direct.42079.604098703705' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42079.604098703705'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[excel-direct.42079.604098703705].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Technology&quot;</bucket>
              <bucket>&quot;Furniture&quot;</bucket>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[excel-direct.42079.604098703705].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([excel-direct.42079.604098703705].[none:Category:nk] / [excel-direct.42079.604098703705].[none:Sub-Category:nk])</rows>
        <cols>[excel-direct.42079.604098703705].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{37E63A6F-394A-4438-B038-F4CB1083762D}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Filter sales and market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.42079.604098703705].[sum:Sales:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[excel-direct.42079.604098703705].[none:Market:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42079.604098703705].[none:Category:nk]</field>
            <field>[excel-direct.42079.604098703705].[none:Market:nk]</field>
            <field>[excel-direct.42079.604098703705].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AFFF0F40-58F1-4E0D-AFC8-53B5D127DD09}' />
    </window>
    <window class='worksheet' name='Sort_1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A0FF7606-A8CB-43DF-8507-09FD3145E387}' />
    </window>
    <window class='worksheet' name='Sort by profitability'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[excel-direct.42079.604098703705].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{186058C4-205C-4FBE-8A74-144E9F278277}' />
    </window>
    <window class='worksheet' name='Grouping  as Desk Supplies'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0BB6A4B1-D3D2-41AD-87BC-9CEEC2168B78}' />
    </window>
    <window class='worksheet' maximized='true' name='Group_!'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[excel-direct.42079.604098703705].[Sub-Category (group) 1]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{808FC8CE-D0A6-41CF-9BE8-F8085F92E58C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Filter sales and market' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Group_!' width='192'>
      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
      5nPYXS6SBwd4vE/amcdkf2OJuaU1arKHgENlemoO2RPC64DE8hz7BYOw30M+n8ehQDJTwuN2
      PuH8aizPPeCgZBINuEgszZEsQSjgpZBMML+2SzASpZLPobhcHB4c4PJ4Hrs3MA2VhfuTrG/t
      kC0ZhP025h/MoNn9+F02djcW2TwsEw76//CZHz75M9cqBeZnZyiaDoJeJztr82yna4RDfiqZ
      XWYW1gnEmt4MA6zN3UN1RdlYmKeppYntvV0Ke1tonghBzyN/kEqO1YMU6WSZ1pibyckZYlE3
      Sxt59OQK1UArqeU5bE4Peb3K9twCvngHnkeGTU1gc2OdUCzE6vI2ldw2pq+Z9bl5wlEHC2tp
      nNVDCvYgqa11HGqWrZKDlojvsT+GoVYpqSYBZ4m5jSqHWwuEmyMsLe+hVA/IECC/NoscaCKd
      TZHZ3IBAE4HHzA2YKje+/YZ8zY6tskva8HOwtkS4xc/9qQRhl8p+WaG4v4VTLrB8AG1NT9hy
      1qwxM7NGZ38vQZ+XhXu3CbTGWZ5bxWOrsJUDbW8FM9zGwfY6avaAghIg4n981e6V6VtUXc1E
      gz607AZrGRvVwwT2gJfp+yu0Rh2s7ZfQ0/vIDpWlzRIdLeEn3BxL2OxOPHbYSSmSW1EAAATO
      SURBVJepHiaQAy2szc0RCtlY2shhLycpuSIkN9ewVTPsVlw0hx83+OqD25ihTvZXFgl4asxu
      6jjVfSqyi+W5JVrjAeaW99+MLpCqy3R2dTIUcZFUdRbvfEtCC9AVffzLhivISH8XdllCr2m4
      Ik109YzgMTLsaQ7Gutvp6/CRypWY/OK3VGJ9RN1PHgzrHRqBcp5gSwuGaaOrs4PBiJPdfI7m
      ziFGBtpI5yrsrU5xbSXP6b4nP7+kOD1Q3GfywTYdXTFkT4Duzj5itjJ7Vejv7OD0QITtwzJz
      N75iT4nRHvI88aq9OT9N26nzOCSoVnU6e3sYavaTzOwS6hyjv6eTUrnM4fYi/3B3m/Oj7U9+
      pkrTSKW2mJqao6yZ6A4vPe0ddPhMdstVOjt7ODvcxFaywtr0DRayNvpag0+slUmn2FmfJ7Gf
      pZIv0Tk0wEC8iVw6gS8+TGdnD4ZWIp/a4LNrC5wa7XniyJAkyYQiUfRaie6eXnTsdHW2MxB2
      spvP09I5yOhAnFS2ws7yPW6ulxjraXqipmAkxNrMPYqKGz2do2NshN6ObsrZdRyxbto7BnBQ
      eDMMYJo6NVUnVzHw2BUGxidwVlLkq/ozj5MVqFaqaFoRzXRi12uUdINSsYbL6Wb88kVKe1s8
      bcJZYmkW1dPOWE8Lpq79QYPTRqVUpFSs4HLYaO49Taenwn6+9sQ6hqHT0jfO+5cH2Vzdplat
      oelVKroNJwZlVSOXr+B1uxg+dx45f0DpSaK0ArfvzTN3+xoP5mbJ1wwqFZV8WcftcVPN56hU
      qthtCpG2QYZjMtvpypM/U8XNh5/8kp9fHmJ+eoFarYZmaBRrEi5FolKtkstV8HocdI+eI2Bk
      yZaf/IiK0xfm0nsf4E4ukzKhVKxSrNRwur3UCjk0tYYkyfijXZzqCbJzkONpQy+6WmSvoNAa
      cWE8+pmXSxSLFVxOG619Z2h3lzl44mdukNzPMfH+hzQbRco2k0KuTKVawubwoxYLGIaKYcpv
      RhfIKWvcun6Dir+VwZYwFc2kvy3C2k6OWCTADy8mWjHFV19fZW1jE9PXRMhIc3NygfjgKAPN
      Tr786ioVZwsDrQEMl4+eAKylTZqCjy+idffa79jbT7KfVunpDHH7+g1qwTbGOttZn73Jwr7K
      2EgfWrnI4PAQa4trRFuakB+5JNWKaW5dvcrSZop4Tz9N9gJXbz0g2D3IUKufW9evcaCGON0b
      o4ZCX4uP1b0iTWH/j84N2cnI6dP0dMXxeML0doS5d+MaWUeY0d5+kiu3mNnIMDQ8jFkt0Xfq
      NOszs0TjrSiPaDK0GjN3rzK9sEVr3xBdfp2vr03ibO1hpD3Kg7s3WM85OTfcTqVSY7A7ztpm
      klg0zKMXb6dicOfWbYrOGKeHu5m/+Q37mpORgVFKO1PcW9ikd/g0Nq1M29AI+0uLhFpbsD2h
      FSimNpH8nYS9dlxSlevXbqKH2hnramP1wU0WDzROj/ShlosMDA2wtrxBtDn22Geu17Lcn5yi
      JPsYPjXC+u2v2MjqDI+dhswKNydn6BiaEMOggpPNG9EFEgjqhTCA4EQjDCA40QgDCE40wgCC
      E40wgOBEIwwgONEIAwhONMIAghONMIDgRCMMIDjRCAMITjTCAIITzf8HYcmoONVN3aUAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Grouping  as Desk Supplies' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sort by profitability' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sort_1' width='192'>
      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
      ONT8fxpAr34cuzbDAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
